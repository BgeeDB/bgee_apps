<?xml version="1.0" encoding="ISO-8859-1" ?>
<web-app xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"
    version="2.4">

    <!-- Deployment descriptor for Bgee webapp -->
    <display-name>Bgee: gene expression data in animals</display-name>
    <description>
      Bgee is a database for retrieval and comparison of gene expression patterns
      across multiple animal species. It provides an intuitive answer to the question
      'where is a gene expressed?' and supports research in cancer and agriculture
      as well as evolutionary biology. Gene expression data are produced from multiple data types
      (RNA-Seq, Affymetrix, in situ hybridization, and EST data) and from multiple data sets
      (including GTEx data).
      Bgee is based exclusively on curated "normal", healthy wild-type, expression data
      (e.g., no gene knock-out, no treatment, no disease), to provide a comparable reference
      of normal gene expression.
      Bgee produces calls of presence/absence of expression, and of differential
      over-/under-expression, integrated along with information of gene orthology,
      and of homology between organs. This allows comparisons of expression patterns
      between species.
    </description>

    <!-- Main servlet -->
    <servlet>
        <display-name>Bgee</display-name>
        <servlet-name>FrontController</servlet-name>
        <servlet-class>org.bgee.controller.FrontController</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Map FrontController to the root -->
    <servlet-mapping>
        <servlet-name>FrontController</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- Use the default servlet to serve static image, css, js -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/img/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <!-- The project version is filled using the maven-war-plugin,
             see bgee-applications/bgee-webapp/pom.xml -->
        <url-pattern>/js/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <!-- The project version is filled using the maven-war-plugin,
             see bgee-applications/bgee-webapp/pom.xml -->
        <url-pattern>/css/*</url-pattern>
    </servlet-mapping>

    <!-- Add a filter to ensure POST request body is encoded in UTF-8,
         see http://wiki.apache.org/tomcat/FAQ/CharacterEncoding#Q3 and
         http://wiki.apache.org/tomcat/FAQ/CharacterEncoding#Q8 -->
    <filter>
        <filter-name>setCharacterEncodingFilter</filter-name>
        <filter-class>org.apache.catalina.filters.SetCharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>ignore</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>setCharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- A Filter to specify the expiration date of files in js/ folder
         (HTML views used by AngularJS should not be put in cache as we don't version them) -->
    <filter>
        <filter-name>ExpiresFilter</filter-name>
        <filter-class>org.apache.catalina.filters.ExpiresFilter</filter-class>
        <!-- We don't version HTMl and JSON files, so we don't allow cache -->
        <init-param>
            <param-name>ExpiresByType text/html</param-name>
            <param-value>access plus 60 minutes</param-value>
        </init-param>
        <init-param>
            <param-name>ExpiresByType application/json</param-name>
            <param-value>access plus 60 minutes</param-value>
        </init-param>
        <!-- Other files are versioned, we can let the clients cache them -->
        <init-param>
            <param-name>ExpiresDefault</param-name>
            <param-value>access plus 1 years</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>ExpiresFilter</filter-name>
        <url-pattern>/js/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <!-- Add a filter for gziping responses. Maybe we would need to disable it
         when we enable ehcache?
         We use a servlet filter rather than the servlet connector, to be able
         to configure it directly from the webapp -->
    <filter>
	    <filter-name>CompressionFilter</filter-name>
	    <filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>
    </filter>
    <!-- these mappings will compress response from the webapp,
         and files in js/ and css/ folders, but not in the img/* folder. -->
    <filter-mapping>
        <filter-name>CompressionFilter</filter-name>
        <url-pattern>/</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CompressionFilter</filter-name>
        <url-pattern>/js/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>CompressionFilter</filter-name>
        <url-pattern>/css/*</url-pattern>
    </filter-mapping>

    <!-- Add a filter to cache the pages using ehcache -->
    <!--
    <filter>
        <filter-name>BgeeWebCache</filter-name>
        <filter-class>org.bgee.controller.servletutils.BgeeWebCache</filter-class>
        <init-param>-->
            <!-- provide here a cache name that is declared in ehcache-production.xml
                 in the resources folder
            -->
            <!--
            <param-name>cacheName</param-name>
            <param-value>BgeeWebCache</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>BgeeWebCache</filter-name>
        <servlet-name>FrontController</servlet-name>
    </filter-mapping>
    -->

    <!-- Startup/shutdown listener -->
    <listener>
        <listener-class>org.bgee.controller.servletutils.BgeeServletContextListener</listener-class>
    </listener>

    <!-- Filter for topanat-dev, enabling cross-domain queries
         (will make local development easier) -->
    <!--
    <filter>
        <filter-name>CORS</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>CORS</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    -->

</web-app>
