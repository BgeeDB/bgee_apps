<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.bgee</groupId>
        <artifactId>bgee-applications</artifactId>
        <version>13</version>
    </parent>

    <artifactId>bgee-webapp</artifactId>
    <packaging>war</packaging>
    <name>bgee-webapp</name>

    <dependencies>

        <!-- TODO: when bgee-core will be included, and that parameters will include 
             sensible information such as database password, we could use 
             the filtering feature of the maven-war-plugin, see 
             http://maven.apache.org/plugins/maven-war-plugin/examples/adding-filtering-webresources.html 
             (filtering section)-->
        <!-- Remove these dependencies as long as the webapp does not use 
            the actual Bgee API <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-core</artifactId> 
            <version>${project.version}</version> <scope>compile</scope> </dependency> 
            <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-dao-api</artifactId> 
            <version>${project.version}</version> <scope>compile</scope> </dependency> -->
        <!-- as long as bgee-dao-sql is the only service provider for bgee-dao-api, 
            we keep this dependency. When other service providers will be available, 
            this dependency might be changed for another service provider -->
        <!-- <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-dao-sql</artifactId> 
            <version>${project.version}</version> <scope>compile</scope> </dependency> -->

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <dependency>
            <groupId>org.terracotta.bigmemory</groupId>
            <artifactId>bigmemory</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-ee</artifactId>
        </dependency>

        <!-- IMPORTANT : Keep this dependency (with 'provided' scope in bgee-application 
            pom.xml) even if it is not used, as ehcache-core is replaced by ehcache-ee 
            to use bigmemory. The reason is that it is somehow automatically included 
            with ehcache-web if not explicitly declared here, and conflicts with ehcache-ee 
            when deployed. -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

    </dependencies>

    <build>
        <finalName>bgee-webapp-${project.version}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <!-- We want to rename the css/ and js/ folders in the WAR file 
                         with version number, to avoid caching problem with web browsers. 
                         So, first, we exclude these folders, see http://stackoverflow.com/a/15116110/1768736 -->
                    <warSourceExcludes>css/,js/</warSourceExcludes>
                    
                    <!-- this will do the renaming : i.e. we specify the source directory 
                         relative to pom.xml and the target directory relative to root, 
                         see http://stackoverflow.com/a/15116110/1768736 -->
                    <webResources>
                        <resource>
                            <directory>src/main/webapp/css</directory>
                            <!-- override the destination directory for this resource -->
                            <targetPath>css/${project.version}</targetPath>
                        </resource>
                        <resource>
                            <directory>src/main/webapp/js</directory>
                            <!-- override the destination directory for this resource -->
                            <targetPath>js/${project.version}</targetPath>
                        </resource>
                    
                        <!-- Now, we want the path to these directories in bgee-webapp.properties -->
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources/</directory>
                            <!-- the list has a default value of ** -->
                            <includes>
                                <include>**/bgee-webapp.properties</include>
                            </includes>
                            <!-- Activates filtering -->
                            <filtering>true</filtering>
                            <!-- override the destination directory for this resource, relative to the root of the WAR file -->
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                        
                    </webResources>
                    
                    <attachClasses>true</attachClasses>
                    
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
        </plugins>
        
        <!-- In order to correctly filter bgee-webapp.properties even outside of the WAR file -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>  
        </resources>
    </build>

</project>
