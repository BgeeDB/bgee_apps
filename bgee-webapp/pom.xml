<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                      http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.bgee</groupId>
        <artifactId>bgee-applications</artifactId>
        <version>14</version>
    </parent>

    <artifactId>bgee-webapp</artifactId>
    <packaging>war</packaging>
    <name>bgee-webapp</name>

    <dependencies>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>bgee-core</artifactId>
        </dependency>
        <!-- Not clear if we need to include these dependencies,
             or if they will be shipped directly by bgee-core -->
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>bgee-dao-api</artifactId>
            <version>${project.version}</version>
        </dependency>
         <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>bgee-dao-sql</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.bgee.log4jdbc-log4j2</groupId>
            <artifactId>log4jdbc-log4j2-jdbc4.1</artifactId>
            <scope>compile</scope>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.3.1</version>
        </dependency>

        <!-- To send Mails -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
        </dependency>

        <!-- Remove these dependencies as long as the webapp does not use
            the actual Bgee API <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-core</artifactId>
            <version>${project.version}</version> <scope>compile</scope> </dependency>
            <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-dao-api</artifactId>
            <version>${project.version}</version> <scope>compile</scope> </dependency> -->
        <!-- as long as bgee-dao-sql is the only service provider for bgee-dao-api,
            we keep this dependency. When other service providers will be available,
            this dependency might be changed for another service provider -->
        <!-- <dependency> <groupId>${project.groupId}</groupId> <artifactId>bgee-dao-sql</artifactId>
            <version>${project.version}</version> <scope>compile</scope> </dependency> -->

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>

        <!-- 
        For now we don't use bigmemory so we remove the dependencies
        to avoid using the terracotta maven repository
        <dependency>
            <groupId>org.terracotta.bigmemory</groupId>
            <artifactId>bigmemory</artifactId>
        </dependency>
         -->

        <!--
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-ee</artifactId>
        </dependency>
        -->

        <!-- IMPORTANT : Keep this dependency (with 'provided' scope in bgee-application
            pom.xml) even if it is not used, as ehcache-core is replaced by ehcache-ee
            to use bigmemory. The reason is that it is somehow automatically included
            with ehcache-web if not explicitly declared here, and conflicts with ehcache-ee
            when deployed. -->
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache</artifactId>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- Filter for topanat-dev, enabling cross-domain queries
             (will make local development easier),
             see http://stackoverflow.com/a/30319456/1768736  -->
        <!--
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
        </dependency>
        -->
        
        <!-- To return CSV files -->
        <dependency>
            <groupId>net.sf.supercsv</groupId>
            <artifactId>super-csv</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.supercsv</groupId>
            <artifactId>super-csv-dozer</artifactId>
        </dependency>

    </dependencies>

    <properties>
        <!-- properties used to rename css and js files with version number,
             to avoid caching issues with proxis/web browers. Corresponds by default
             to the project version number, but we might have additional updates of these files. -->
        <!-- WARNING: never removes these properties, otherwise your files will be named, e.g.,
             *${filter.org.bgee.webapp.css.version.extension}.css. If you want to disable
             versioning of CSS and JS files, just leave these properties empty. -->
        <filter.org.bgee.webapp.css.version.extension>min${project.version}b</filter.org.bgee.webapp.css.version.extension>
        <filter.org.bgee.webapp.javascript.version.extension>min${project.version}b</filter.org.bgee.webapp.javascript.version.extension>
        <!-- This property defines where the minified CSS and JS files will be stored.
             This is useful to be able to change this setting when running the webapp from within Eclipse
             (Eclipse acquires its resources before any plugin can process them, so we modify
             this property when running the webapp from within Eclipse, to write the minified files
             directly into the m2e-wtp 'web-resources' folder) -->
        <minify.webappTargetDir>${project.build.directory}/${project.build.finalName}</minify.webappTargetDir>
        <!-- These property specify whether minified CSS and JS files will be used by the webapp.
             This allows to use the original files for easier debugging, notably when running the webapp
             from within Eclipse.  -->
        <filter.org.bgee.webapp.minify>true</filter.org.bgee.webapp.minify>
        <!-- property used to activate/deactivate maven-minify-plugin -->
        <skip.minify.plugin>false</skip.minify.plugin>


        <!-- Default the parameter to use localhost as mail sender.
             This parameter should be overriden in maven settings.xml if needed -->
        <filter.org.bgee.webapp.mailUri>smtp://localhost/</filter.org.bgee.webapp.mailUri>
        <!-- "From" address when sending mails at TopAnat job completions.
             This parameter should be overriden in maven settings.xml so that external users
             of the webapp fo not use the Bgee mail by default. -->
        <filter.org.bgee.webapp.topAnatFromAddress></filter.org.bgee.webapp.topAnatFromAddress>

        <!-- Set the host we want to link to. For instance, we might want to link to bgee.org
             while the current host is bgee.unil.ch. This is important for generating links in emails.
             Simply set to point to the server root by default, This parameter should be overriden
             in Maven settings.xml if needed -->
        <filter.org.bgee.webapp.bgeeRootDirectory>/</filter.org.bgee.webapp.bgeeRootDirectory>
        <!-- in production, should be '.bgee.org', set using Maven settings.xml -->
        <filter.org.bgee.webapp.bgeeRootDomain></filter.org.bgee.webapp.bgeeRootDomain>
    </properties>

    <!-- There is a problem when running the webapp from Eclipse: m2e-wtp acquires
         the web-resources before any lifecycle can be launched, so, before
         minify-maven-plugin can minify the files. We define a profile so that
         minify-maven-plugin copies the files directly into the m2e-wtp web-resources directory,
         when running from Eclipse.
         We also use this profile to be able to NOT use the minified CSS and JS files when the webapp
         is run from within Eclipse, for easier debugging. -->
    <profiles>
        <profile>
            <id>m2e</id>
            <!-- This profile is only active when the property "m2e.version"
                 is set, which is the case when building in Eclipse with m2e,
                 see http://stackoverflow.com/a/21574285/1768736. -->
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <properties>
                <!-- change paths where minify-maven-plugin minifies files -->
                <minify.webappTargetDir>${project.build.directory}/m2e-wtp/web-resources/</minify.webappTargetDir>
                <!-- Disable minify for easier debugging. Just change the two following properties
                     to use minified files, to properly test a release as it will be
                     in production server. -->
                <filter.org.bgee.webapp.minify>false</filter.org.bgee.webapp.minify>
                <!-- activate/deactivate minify plugin -->
                <skip.minify.plugin>true</skip.minify.plugin>
                <!-- In order to have no extension in URLs, change tomcat context root
                     (this is buggy in Eclipse) -->
                <m2eclipse.wtp.contextRoot></m2eclipse.wtp.contextRoot>
            </properties>
        </profile>
    </profiles>


    <build>
        <finalName>bgee-webapp-${project.version}</finalName>

        <!-- When running server from Eclipse, we need to tell m2e to execute
             minify-maven-plugin, to properly minify css and js files, by default it doesn't.
             We need to modify the life cycle mapping, see
             https://www.eclipse.org/m2e/documentation/m2e-execution-not-covered.html. -->
        <pluginManagement>
            <plugins>
                <!-- This plugin is not a real one, it is only used by m2e to obtain
                     config information. This is why it needs to be put in the section
                     pluginManagement, otherwise Maven would try to download it. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>com.samaxes.maven</groupId>
                                        <artifactId>minify-maven-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>minify</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <execute>
                                            <!-- set to true, otherwise changes are not seen,
                                            e.g., to a css file, and you would need to perform
                                            a project update each time. -->
                                            <runOnIncremental>true</runOnIncremental>
                                        </execute>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Merge and minify CSS and JS files.
                 IMPORTANT NOTE: if you get an error for merging a newly added file,
                 this might be due to a bug when a file ends with a comment line,
                 see https://github.com/samaxes/minify-maven-plugin/issues/105 -->
            <plugin>
                <groupId>com.samaxes.maven</groupId>
                <artifactId>minify-maven-plugin</artifactId>
                <executions>

                    <!-- merge files from external libraries already minified,
                         common to all pages. -->
                    <execution>
                        <id>common_minified_vendor</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/jquery.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/jquery.visible.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/jquery-ui.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/toastr.min.js</jsSourceFile>
                                <!-- Bootstrap JS file is after jQuery JS file to override it for tooltip -->
                                <jsSourceFile>lib/jquery_plugins/bootstrap.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <jsFinalFile>vendor_common.${filter.org.bgee.webapp.javascript.version.extension}.js</jsFinalFile>
                            <!-- <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix> -->

                            <cssSourceDir>css/</cssSourceDir>
                            <!-- the css files need to keep their relative location -->
                            <cssTargetDir>css/lib/jquery_plugins/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/jquery_plugins/jquery-ui.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/jquery-ui.structure.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/jquery-ui.theme.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/toastr.min.css</cssSourceFile>
                                <!-- Bootstrap CSS file is after jQuery CSS file to override it for tooltip -->
                                <cssSourceFile>lib/jquery_plugins/bootstrap.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <cssFinalFile>vendor_common.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge and minify all Bgee files common to all pages -->
                    <execution>
                        <id>minify_common_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <jsEngine>CLOSURE</jsEngine>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <skipMerge>${skip.minify.plugin}</skipMerge>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>bgeeproperties.js</jsSourceFile>
                                <jsSourceFile>urlparameters.js</jsSourceFile>
                                <jsSourceFile>requestparameters.js</jsSourceFile>
                                <jsSourceFile>common.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>script_common.js</jsFinalFile>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>bgee.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>common.css</cssFinalFile>
                            <suffix>.${filter.org.bgee.webapp.css.version.extension}</suffix>
                        </configuration>
                    </execution>

                    <!-- files that we only want to minify, not to merge:
                         they are the only Bgee file used on their respective page -->
                    <execution>
                        <id>minify_no_merge_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMerge>true</skipMerge>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>general.js</jsSourceFile>
                                <jsSourceFile>download.js</jsSourceFile>
                            </jsSourceFiles>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>documentation.css</cssSourceFile>
                                <cssSourceFile>download.css</cssSourceFile>
                                <cssSourceFile>general.css</cssSourceFile>
                                <cssSourceFile>topanat.css</cssSourceFile>
                                <cssSourceFile>gene.css</cssSourceFile>
                                <cssSourceFile>species.css</cssSourceFile>
                                <cssSourceFile>source.css</cssSourceFile>
                                <cssSourceFile>sparql.css</cssSourceFile>
                                <cssSourceFile>raw_data.css</cssSourceFile>
                                <cssSourceFile>anat_sim.css</cssSourceFile>
                                <cssSourceFile>expr_comp.css</cssSourceFile>
                            </cssSourceFiles>
                            <suffix>.${filter.org.bgee.webapp.css.version.extension}</suffix>
                        </configuration>
                    </execution>

                    <!-- Files that we only want to rename, not to merge nor to minify
                         (they are already minified) -->
                    <execution>
                        <id>no_merge_no_minify_1</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- we pretend to merge the file so that it is renamed -->
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/lib/angular_modules/ui_grid/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/angular_modules/ui_grid/ui-grid.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>ui-grid.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>no_merge_no_minify_2</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- we pretend to merge the file so that it is renamed -->
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/lib/font_awesome/css/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/font_awesome/css/font-awesome.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>font-awesome.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge files from external libraries already minified,
                         specific to gene pages. -->
                    <execution>
                        <id>gene_minified_vendor</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/lib/jquery_plugins/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/jquery_plugins/jquery.dataTables.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/dataTables.responsive.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <jsFinalFile>vendor_gene.${filter.org.bgee.webapp.javascript.version.extension}.js</jsFinalFile>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/lib/jquery_plugins/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/jquery_plugins/jquery.dataTables.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/responsive.dataTables.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <cssFinalFile>vendor_gene.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge and minify all Bgee files specific to gene pages -->
                    <execution>
                        <id>minify_gene_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>gene.js</jsSourceFile>
                                <jsSourceFile>autoCompleteGene.js</jsSourceFile>
                                <jsSourceFile>jquery_ui_autocomplete_modif.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>script_gene.js</jsFinalFile>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>

                            <!-- topanat.css is minified in execution with ID minify_no_merge_bgee,
                                 this should be changed if there are more than one CSS file
                                 specific to Bgee used.  -->
                            <!-- <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>gene.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>gene.css</cssFinalFile>
                            <suffix>.${filter.org.bgee.webapp.css.version.extension}</suffix> -->
                        </configuration>
                    </execution>

                    <!-- merge files from external libraries already minified,
                         specific to TopAnat pages. -->
                    <execution>
                        <id>topanat_minified_vendor</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/angular.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-animate.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-messages.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-resource.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-route.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-sanitize.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-touch.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/ui_modules/ui-grid.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/ui_modules/ui-bootstrap-tpls.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-file-upload.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-location-update.min.js</jsSourceFile>
                                <jsSourceFile>lib/Blob.js</jsSourceFile>
                                <jsSourceFile>lib/FileSaver.min.js</jsSourceFile>
                                <jsSourceFile>lib/angular_modules/angular-file-saver.bundle.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <jsFinalFile>vendor_topanat.${filter.org.bgee.webapp.javascript.version.extension}.js</jsFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge and minify all Bgee files specific to TopAnat -->
                    <execution>
                        <id>minify_topanat_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>topanat/topanat.js</jsSourceFile>
                                <jsSourceFile>topanat/services/logger.module.js</jsSourceFile>
                                <jsSourceFile>topanat/services/logger.js</jsSourceFile>
                                <jsSourceFile>topanat/controllers/main.js</jsSourceFile>
                                <jsSourceFile>topanat/controllers/result.js</jsSourceFile>
                                <jsSourceFile>topanat/services/bgeedataservice.js</jsSourceFile>
                                <jsSourceFile>topanat/services/bgeejobservice.js</jsSourceFile>
                                <jsSourceFile>topanat/services/helpservice.js</jsSourceFile>
                                <jsSourceFile>topanat/services/datatypefactory.js</jsSourceFile>
                                <jsSourceFile>topanat/services/config.js</jsSourceFile>
                                <jsSourceFile>topanat/services/lang.js</jsSourceFile>
                                <jsSourceFile>topanat/services/constants.js</jsSourceFile>
                                <jsSourceFile>topanat/directives/loading.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>script_topanat.js</jsFinalFile>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>

                            <!-- topanat.css is minified in execution with ID minify_no_merge_bgee,
                                 this should be changed if there are more than one CSS file
                                 specific to Bgee used.  -->
                            <!-- <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>topanat.css</cssSourceFile>
                            </cssSourceFiles>
                            <cssFinalFile>topanat.css</cssFinalFile>
                            <suffix>.${filter.org.bgee.webapp.css.version.extension}</suffix> -->
                        </configuration>
                    </execution>

                    <!-- merge files from external libraries already minified,
                         specific to anatomical similarity pages. -->
                    <execution>
                        <id>anat_sim_minified_vendor</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/lib/jquery_plugins/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/jquery_plugins/jquery.dataTables.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/dataTables.responsive.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <jsFinalFile>vendor_anat_sim.${filter.org.bgee.webapp.javascript.version.extension}.js</jsFinalFile>
                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/lib/jquery_plugins/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/jquery_plugins/jquery.dataTables.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/responsive.dataTables.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <cssFinalFile>vendor_anat_sim.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge and minify all Bgee files specific to anatomical similarity pages -->
                    <execution>
                        <id>minify_anat_sim_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>anat_sim.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>script_anat_sim.js</jsFinalFile>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>
                        </configuration>
                    </execution>

                    <!-- merge files from external libraries already minified,
                         specific to expression comparison pages. -->
                    <execution>
                        <id>expr_comp_minified_vendor</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <skipMinify>true</skipMinify>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/lib/jquery_plugins/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>lib/jquery_plugins/jquery.dataTables.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/dataTables.responsive.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/dataTables.buttons.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/dataTables.sort.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/buttons.html5.min.js</jsSourceFile>
                                <jsSourceFile>lib/jquery_plugins/jszip.min.js</jsSourceFile>
                            </jsSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <jsFinalFile>vendor_expr_comp.${filter.org.bgee.webapp.javascript.version.extension}.js</jsFinalFile>

                            <cssSourceDir>css/</cssSourceDir>
                            <cssTargetDir>css/lib/jquery_plugins/</cssTargetDir>
                            <cssSourceFiles>
                                <cssSourceFile>lib/jquery_plugins/jquery.dataTables.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/responsive.dataTables.min.css</cssSourceFile>
                                <cssSourceFile>lib/jquery_plugins/buttons.dataTables.min.css</cssSourceFile>
                            </cssSourceFiles>
                            <!-- Files already provided minified. The suffix will then not be added  -->
                            <cssFinalFile>vendor_expr_comp.${filter.org.bgee.webapp.css.version.extension}.css</cssFinalFile>
                        </configuration>
                    </execution>

                    <!-- merge and minify all Bgee files specific to expresion comparison page -->
                    <execution>
                        <id>minify_expr_comp_bgee</id>
                        <goals>
                            <!-- Binds by default to the lifecycle phase: process-resources -->
                            <goal>minify</goal>
                        </goals>
                        <configuration>
                            <webappTargetDir>${minify.webappTargetDir}</webappTargetDir>
                            <!-- We always skip the merge and minify if requested -->
                            <skipMinify>${skip.minify.plugin}</skipMinify>
                            <skipMerge>${skip.minify.plugin}</skipMerge>
                            <jsEngine>CLOSURE</jsEngine>

                            <jsSourceDir>js/</jsSourceDir>
                            <jsTargetDir>js/</jsTargetDir>
                            <jsSourceFiles>
                                <jsSourceFile>expr_comp.js</jsSourceFile>
                            </jsSourceFiles>
                            <jsFinalFile>script_expr_comp.js</jsFinalFile>
                            <suffix>.${filter.org.bgee.webapp.javascript.version.extension}</suffix>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>

                    <!-- We do no exclude source CSS and JS files from the WAR:
                         this will make a larger archive, but it will allow to easily
                         activate/deactivate the use of minified files, for easier debugging. -->



                    <webResources>
                        <!-- We have a problem with m2e-wtp, the resources in src/main/webapp/
                             are not considered. We need to explicitly list this folder
                             in the webResources to fix the problem (we shouldn't have to)  -->
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/webapp/</directory>
                            <includes>
                                <include>**</include>
                            </includes>
                            <!-- override the destination directory for this resource,
                                 relative to the root of the WAR file -->
                            <targetPath>/</targetPath>
                        </resource>

                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp/WEB-INF</directory>
                            <includes>
                                <include>web.xml</include>
                            </includes>
                            <targetPath>WEB-INF/</targetPath>
                        </resource>

                        <!-- We filter bgee-webapp.properties so that css version number
                             and javacript version number are configured.
                             bgee.dao.properties is filtered to add database connection parameters -->
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources/</directory>
                            <includes>
                                <include>bgee.properties</include>
                                <include>bgee.dao.properties</include>
                            </includes>
                            <!-- Activates filtering -->
                            <filtering>true</filtering>
                            <!-- override the destination directory for this resource,
                                 relative to the root of the WAR file -->
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                        <!-- log configuration files, no filtering -->
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources/</directory>
                            <includes>
                                <include>log4j2.xml</include>
                            </includes>
                            <filtering>false</filtering>
                            <!-- override the destination directory for this resource,
                                 relative to the root of the WAR file -->
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>
                        <!-- R resources -->
                        <resource>
                            <!-- this is relative to the pom.xml directory -->
                            <directory>src/main/resources/</directory>
                            <includes>
                                <include>R_scripts/</include>
                            </includes>
                            <filtering>false</filtering>
                            <!-- override the destination directory for this resource,
                                 relative to the root of the WAR file -->
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>

                    </webResources>
                    <attachClasses>true</attachClasses>
                </configuration>
            </plugin>



            <!-- In order to properly test the class BgeeProperties, we need to ensure
                 that tests are run one at a time. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <forkCount>1</forkCount>
                    <reuseForks>false</reuseForks>
                </configuration>
            </plugin>
        </plugins>


        <!-- In order to correctly filter bgee.properties even outside of the WAR file -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>bgee.properties</include>
                    <include>bgee.dao.properties</include>
                </includes>
            </resource>
        </resources>

    </build>
</project>
